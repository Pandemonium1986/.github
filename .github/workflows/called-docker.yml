---
name: "Docker Build and Push Workflow"

on:
  workflow_call:
    inputs:
      docker-user:
        description: "Name of the Docker user to deploy to its namespace"
        required: true
        type: string
      docker-image: 
        description: "Name of the Docker image to create and push"
        required: true
        type: string
    secrets:
      github-token:
        description: "GitHub Token"
        required: true

jobs:
  # called-linter:
  #   permissions:
  #     contents: read
  #     packages: read
  #     statuses: write
  #   name: "Called: GitHub Super Linter Workflow"
  #   uses: pandemonium1986/.github/.github/workflows/called-linter.yml@main
  #   secrets:
  #     github-token: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: "Dbp: Build and Push"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      statuses: write
    # needs:
    #   - called-linter
    steps:
      - name: "Init: Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Prepare: Truncate image name"
        id: docker_truncate
        run: echo "::set-output name=docker-image-truncate::${inputs.docker-image##*/}"
        
      - name: "Prepare: Docker meta"
        id: docker_meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ghcr.io/${{ inputs.docker-user }}/${{ inputs.docker-image }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=semver,pattern={{ version }}
      - name: "Docker: Login to GitHub container registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.github-token }}
      - name: "Docker: Set up docker buildx"
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: "Docker: Build and push"
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: "Docker: Image digest"
        run: echo ${{ steps.docker_build.outputs.digest }}
